apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecosphere
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: metadata
            image: python
            imagePullPolicy: IfNotPresent
            env:
            - name : S3_ENDPOINT_URL
              value: <INSERT_S3_ENDPOINT_URL>
            - name : BUCKET_NAME
              value: projet-ecolab-action-qualite
            - name : SECRET_KEY
              value: <INSERT S3 SECRET KEY>
            - name : ACCESS_KEY
              value: <INSERT S3 ACCESS KEY>
            - name : POSTGRES_USER
              value: projet-ecolab-action-qualite
            - name : POSTGRES_PASSWORD
              value: <INSERT POSTGRESS PASSWORD>
            - name : POSTGRES_URL
              value: <INSERT POSTGRES URL>
            - name : POSTGRES_PORT
              value: "5432"
            - name : POSTGRES_DB
              value: defaultdb
            command:
            - /bin/sh
            - -c
            args:
            - |
              # MAJ donnees depuis le dump
              svn export https://github.com/ecolabdata/ecospheres-metadata/trunk/src /src
              cd /src
              pip install -r requirements.txt
              echo "Extraction..."
              python extract.py
              echo "Transformation..."
              python transform.py
              echo "Load..."
              python load.py
              
              # Maj de la config metabase
              apt update
              apt install -y postgresql-client postgresql-client-common libpq-dev
              export PGPASSWORD=$POSTGRES_PASSWORD 
              pg_dump -h ${POSTGRES_URL} -p ${POSTGRES_PORT} -d ${POSTGRES_DB} -U ${POSTGRES_USER} -Fc -f /tmp/metabase.dump
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip -q awscliv2.zip
              ./aws/install
              export AWS_ACCESS_KEY_ID=$ACCESS_KEY
              export AWS_SECRET_ACCESS_KEY=$SECRET_KEY
              aws s3 --endpoint-url ${S3_ENDPOINT_URL} -- cp /tmp/metabase.dump s3://${BUCKET_NAME}/
          restartPolicy: OnFailure
